{
    "docs": [
        {
            "location": "/", 
            "text": "Welcome to CS12 SI!\n\n\nThis is where all of the labs will be posted.\n\n\nWhat is SI?\n\n\nSupplemental Instruction is a series of weekly review sessions for students taking historically difficult courses.\nIt offers students the chance to collaborate, discuss challenging concepts, and study for exams.\n\n\nWhat isn\u2019t SI?\n\n\nSupplemental Instruction is not a lecture.\nSI Leaders are not there to teach you new material but to lead you in reviewing the material covered in lecture and to help guide you in understanding the subject.\n\n\nWho should go?\n\n\nIf you are in a Learning Community, attendance is mandatory.\n\n\nGuidelines:\n\n\n\n\nBe respectful. This includes silencing your cell phones and not using them during sessions.\n\n\nParticipate! You won\u2019t get very much out of SI if you don\u2019t.\n\n\nNo food or drink besides water. This is a rule placed by the administration. I will enforce it.\n\n\nLate entry and early exit should be quiet.\n\n\nSign in, even if you are late.", 
            "title": "Home"
        }, 
        {
            "location": "/#welcome-to-cs12-si", 
            "text": "This is where all of the labs will be posted.", 
            "title": "Welcome to CS12 SI!"
        }, 
        {
            "location": "/#what-is-si", 
            "text": "Supplemental Instruction is a series of weekly review sessions for students taking historically difficult courses.\nIt offers students the chance to collaborate, discuss challenging concepts, and study for exams.", 
            "title": "What is SI?"
        }, 
        {
            "location": "/#what-isnt-si", 
            "text": "Supplemental Instruction is not a lecture.\nSI Leaders are not there to teach you new material but to lead you in reviewing the material covered in lecture and to help guide you in understanding the subject.", 
            "title": "What isn\u2019t SI?"
        }, 
        {
            "location": "/#who-should-go", 
            "text": "If you are in a Learning Community, attendance is mandatory.", 
            "title": "Who should go?"
        }, 
        {
            "location": "/#guidelines", 
            "text": "Be respectful. This includes silencing your cell phones and not using them during sessions.  Participate! You won\u2019t get very much out of SI if you don\u2019t.  No food or drink besides water. This is a rule placed by the administration. I will enforce it.  Late entry and early exit should be quiet.  Sign in, even if you are late.", 
            "title": "Guidelines:"
        }, 
        {
            "location": "/lab01/", 
            "text": "Exercise 1\n\n\nCount the number of characters, words, and lines there are in the entire text of Alice in Wonderland.\n\n\nYou can find a copy of the text \nhere\n.\n\n\nYou are not required to use c++ file input techniques.\nInstead, use input redirection.\n\n\n# compile:\ng++ main.cpp\n# input redirection:\n./a.out \n AliceInWonderland.txt\n\n\n\n\n\n\nA line of text ends with the newline character \n'\\n'\n\n\nA word is separated by spaces\n\n\nA character is any character including spaces and newlines\n\n\n\n\nThere is a program in linux that already does this.\nIt is called \nwc\n (word count).\nRun it to verify your results.\n\n\nwc AliceInWonderland.txt\n# Sample output:\n# [line  word  char filename]\n# 100   300   1000  AliceInWonderland.txt\n\n\n\n\nExercise 2\n\n\nTranspose a square matrix.\nThe matrix can be any size, but is guaranteed to be square (width and height are the same).\n\n\nHere is an example of a 3x3 matrix:\n\n\ninput:\n\n0 1 2\n3 4 5\n6 7 8\n\ntransposed:\n\n0 3 6\n1 4 7\n2 5 8\n\n\n\n\nYou represent matrices in c++ with a vector of vectors, \nvector\nvector\nint\n \n.", 
            "title": "Lab Week 1: CS 10 Review"
        }, 
        {
            "location": "/lab01/#exercise-1", 
            "text": "Count the number of characters, words, and lines there are in the entire text of Alice in Wonderland.  You can find a copy of the text  here .  You are not required to use c++ file input techniques.\nInstead, use input redirection.  # compile:\ng++ main.cpp\n# input redirection:\n./a.out   AliceInWonderland.txt   A line of text ends with the newline character  '\\n'  A word is separated by spaces  A character is any character including spaces and newlines   There is a program in linux that already does this.\nIt is called  wc  (word count).\nRun it to verify your results.  wc AliceInWonderland.txt\n# Sample output:\n# [line  word  char filename]\n# 100   300   1000  AliceInWonderland.txt", 
            "title": "Exercise 1"
        }, 
        {
            "location": "/lab01/#exercise-2", 
            "text": "Transpose a square matrix.\nThe matrix can be any size, but is guaranteed to be square (width and height are the same).  Here is an example of a 3x3 matrix:  input:\n\n0 1 2\n3 4 5\n6 7 8\n\ntransposed:\n\n0 3 6\n1 4 7\n2 5 8  You represent matrices in c++ with a vector of vectors,  vector vector int   .", 
            "title": "Exercise 2"
        }
    ]
}